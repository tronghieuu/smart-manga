<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.smanga.business.mapper.RecommendMangaMapper">
    
    <resultMap type="RecommendManga" id="RecommendMangaResult">
        <result property="id"    column="id"    />
        <result property="userId"    column="user_id"    />
        <result property="mangaId"    column="manga_id"    />
        <result property="isRecommend"    column="is_recommend"    />
        <result property="createBy"    column="create_by"    />
        <result property="createTime"    column="create_time"    />
        <result property="updateBy"    column="update_by"    />
        <result property="updateTime"    column="update_time"    />
        <result property="rating"    column="rating"    />
    </resultMap>

    <sql id="selectRecommendMangaVo">
        select id, user_id, manga_id, is_recommend, create_by, create_time, update_by, update_time, rating from recommend_manga
    </sql>

    <select id="selectRecommendMangaList" parameterType="RecommendManga" resultMap="RecommendMangaResult">
        <include refid="selectRecommendMangaVo"/>
        <where>  
            <if test="userId != null "> and user_id = #{userId}</if>
            <if test="mangaId != null "> and manga_id = #{mangaId}</if>
            <if test="isRecommend != null "> and is_recommend = #{isRecommend}</if>
            <if test="rating != null "> and rating = #{rating}</if>
        </where>
    </select>
    
    <select id="selectRecommendMangaById" parameterType="Long" resultMap="RecommendMangaResult">
        <include refid="selectRecommendMangaVo"/>
        where id = #{id}
    </select>
        
    <insert id="insertRecommendManga" parameterType="RecommendManga" useGeneratedKeys="true" keyProperty="id">
        insert into recommend_manga
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="userId != null">user_id,</if>
            <if test="mangaId != null">manga_id,</if>
            <if test="isRecommend != null">is_recommend,</if>
            <if test="createBy != null">create_by,</if>
            <if test="rating != null">rating,</if>
            create_time,
         </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="userId != null">#{userId},</if>
            <if test="mangaId != null">#{mangaId},</if>
            <if test="isRecommend != null">#{isRecommend},</if>
            <if test="createBy != null">#{createBy},</if>
            <if test="rating != null">#{rating},</if>
            sysdate(),
         </trim>
    </insert>

    <update id="updateRecommendManga" parameterType="RecommendManga">
        update recommend_manga
        <trim prefix="SET" suffixOverrides=",">
            <if test="userId != null">user_id = #{userId},</if>
            <if test="mangaId != null">manga_id = #{mangaId},</if>
            <if test="isRecommend != null">is_recommend = #{isRecommend},</if>
            <if test="updateBy != null">update_by = #{updateBy},</if>
            <if test="rating != null">rating = #{rating},</if>
            update_time = sysdate(),
        </trim>
        where id = #{id}
    </update>

    <delete id="deleteRecommendMangaById" parameterType="Long">
        delete from recommend_manga where id = #{id}
    </delete>

    <delete id="deleteRecommendMangaByIds" parameterType="String">
        delete from recommend_manga where id in 
        <foreach item="id" collection="array" open="(" separator="," close=")">
            #{id}
        </foreach>
    </delete>

	<delete id="deleteAll">
        TRUNCATE TABLE recommend_manga;
    </delete>
    
</mapper>